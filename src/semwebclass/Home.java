package semwebclass;

import com.hp.hpl.jena.db.IDBConnection;
import com.hp.hpl.jena.ontology.Individual;
import com.hp.hpl.jena.ontology.OntClass;
import com.hp.hpl.jena.ontology.OntModel;
import com.hp.hpl.jena.ontology.OntProperty;
import java.util.Iterator;
import static semwebclass.ontologyDB.getModelFromDB;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Orange
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        DisplayTA = new javax.swing.JTextArea();
        createJB = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        viewJB = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        entryTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DisplayTA.setColumns(20);
        DisplayTA.setRows(5);
        jScrollPane1.setViewportView(DisplayTA);

        createJB.setText("Create");
        createJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createJBActionPerformed(evt);
            }
        });

        jButton2.setText("Instances");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        viewJB.setText("View");
        viewJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewJBActionPerformed(evt);
            }
        });

        jButton1.setText("  Class Properties");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Instance Property");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        entryTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryTFActionPerformed(evt);
            }
        });

        jLabel1.setText("Entry Here ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(entryTF, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(createJB, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(viewJB, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jButton2)
                        .addGap(37, 37, 37)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entryTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createJB)
                    .addComponent(jButton2)
                    .addComponent(viewJB)
                    .addComponent(jButton1)
                    .addComponent(jButton3)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createJBActionPerformed
   String filePath = "file:///B://ConfMa.owl";
        
        IDBConnection con = ConnectToDB.connectDB();
        System.out.println(con);
        String name = "myonto";
     ontologyDB.createDBModelFromFile(con, name, filePath);
     DisplayTA.setText(" File Found \n database creation Sucess" );
    }//GEN-LAST:event_createJBActionPerformed

    private void viewJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewJBActionPerformed
String filePath = "file:///B://ConfMa.owl";
        
        IDBConnection con = ConnectToDB.connectDB();
        System.out.println(con);
        String name = "myonto";
    
     DisplayTA.append("\n ==== Here is the Lists of all classes === \n");
    
        OntModel model = getModelFromDB(con, name);
       String[] content = new String[100];
       
        for(Iterator i = model.listClasses(); i.hasNext();){
            OntClass c = (OntClass) i.next();
           // System.out.println(c.getLocalName());
           //content[k]= c.getLocalName();
           DisplayTA.append(c.getLocalName());
        DisplayTA.append("\n");
        }

// TODO add your handling code here:
    }//GEN-LAST:event_viewJBActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
String filePath = "file:///B://ConfMa.owl";
        
        IDBConnection con = ConnectToDB.connectDB();
        System.out.println(con);
        String name = "myonto";
        
        String className="Conference";
        className=entryTF.getText();
        DisplayTA.append(" \n ==== Here is the Lists of instances for " + className +" === \n ");

        
        OntModel model = getModelFromDB(con, name);
        String prefix = "http://www.semanticweb.org/orange/ontologies/2018/11/conman#";
        OntClass movs = model.getOntClass(prefix + className);
        
        //print out the name of the selected class
        System.out.println(movs.getLocalName());
        DisplayTA.append(" ==="+movs.getLocalName()+"=== ");
        DisplayTA.append("\n");
        //get instances of the selected class
        for(Iterator it = movs.listInstances(); it.hasNext();){
            Individual ind = (Individual) it.next();
            //System.out.println(ind.getLocalName());
            
            DisplayTA.append(ind.getLocalName());
            DisplayTA.append("\n");
            if(ind.getLocalName()==""){
                DisplayTA.append("\n Sorry !!No Instance Found \n ");
                break;
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 
        String filePath = "file:///B://ConfMa.owl";
        
        IDBConnection con = ConnectToDB.connectDB();
        System.out.println(con);
        String name = "myonto";
        String className="Conference";
        className=entryTF.getText();
        DisplayTA.append(" \n ==== Here is the Lists of class properties for " + className +" === \n ");
        OntModel model = getModelFromDB(con, name);
        String prefix = "http://www.semanticweb.org/orange/ontologies/2018/11/conman#";
        OntClass movs = model.getOntClass(prefix + className);
        
        //get the properties of the instances of the selected class
        for(Iterator it = movs.listDeclaredProperties(); it.hasNext();){
            OntProperty prop = (OntProperty) it.next();
            //print out the property name and its values
            DisplayTA.append(prop.getLocalName());
            DisplayTA.append("\n");
            if(prop.getLocalName()==""){
                DisplayTA.append("\n Sorry !!No Instance Found \n ");
                break;
            }//System.out.println(prop.getLocalName());
        }   
        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
String filePath = "file:///B://ConfMa.owl";
        
        IDBConnection con = ConnectToDB.connectDB();
        System.out.println(con);
        String name = "myonto";
        String className="Conference";
        className=entryTF.getText();
        DisplayTA.append("\n ==== Here is the Lists of Instance Properties for " + className +" === \n");


 OntModel model = getModelFromDB(con, name);
        String prefix = "http://www.semanticweb.org/orange/ontologies/2018/11/conman#";
        OntClass movs = model.getOntClass(prefix + className);
        
        //get all instances one by one for the class
        Iterator it = movs.listInstances();
        while(it.hasNext()){
            Individual ind = (Individual) it.next();
            
            //get properties of the individuals one by one
            for(Iterator indit = movs.listDeclaredProperties(); indit.hasNext();){
                OntProperty ontp = (OntProperty) indit.next();
                
                for(Iterator init = ind.listProperties(ontp); init.hasNext();){
                    String valueName = init.next().toString();
                    //System.out.println(valueName);
                        DisplayTA.append(valueName);
                        DisplayTA.append("\n");
                if(valueName==""){
                DisplayTA.append("\n Sorry !!No Instance Property Found \n ");
                break;
            }
                }
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void entryTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_entryTFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea DisplayTA;
    private javax.swing.JButton createJB;
    private javax.swing.JTextField entryTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewJB;
    // End of variables declaration//GEN-END:variables
}
